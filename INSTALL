#! /bin/sh
#
# INSTALLING YOUR MLR-SYSTEM
# (c) Machine Learning and Robotics Lab, FU Berlin, Germany, 2011
# http://www.inf.fu-berlin.de/en/groups/mlr
#
#
# Parameters:
#
# - Directory where the external libraries get installed
#   DIR_EXTERNAL_LIBS=<directory>
#   Default: ~/lib/
#
# - Tar-ball of the external libraries
#   FILE_LIBS_TARBALL=<file>
#   Default ./mlrLibs.tgz
#   You can get this tarball from
#   https://maserati.mi.fu-berlin.de/redmine/attachments/894/mlrLibs.tgz


[ -z "${DIR_EXTERNAL_LIBS}" ] && DIR_EXTERNAL_LIBS=~/lib/
[ -z "${FILE_LIBS_TARBALL}" ] && FILE_LIBS_TARBALL=mlrLibs.tgz

FILE_SCRIPT=`readlink -f $0`
DIR_GIT=`dirname $FILE_SCRIPT`
ARCH=`uname -m`



# ----------------------------
# (1) External Libraries

echo "Setting up external libraries in: " $DIR_EXTERNAL_LIBS
echo "Using tar-ball: " $FILE_LIBS_TARBALL

if [ ! -d "${DIR_EXTERNAL_LIBS}" ] ; then
  echo "Creating lib directory: " $DIR_EXTERNAL_LIBS
  mkdir $DIR_EXTERNAL_LIBS
fi

cp $FILE_LIBS_TARBALL $DIR_EXTERNAL_LIBS
cd $DIR_EXTERNAL_LIBS

echo "Unpacking tar-ball..."
tar xfz mlrLibs.tgz

echo "Setting library links to libraries appropriate for the architecture..."
echo "Architecture=" ARCH

# SWIFT
if [ "${ARCH}" = "x86_64" ] ; then
  cp SWIFT++_1.2/lib/libswiftpp12-gcc432r-64.a SWIFT++_1.2/lib/libSWIFT++.a
  echo "Using SWIFT++_1.2/lib/libswiftpp12-gcc432r-64.a"
else
  cp SWIFT++_1.2/lib/libswiftpp12-debr.a SWIFT++_1.2/lib/libSWIFT++.a
  echo "Using SWIFT++_1.2/lib/libswiftpp12-debr.a"
fi
# NTCAN
cd $DIR_EXTERNAL_LIBS/ntcan/lib/
if [ "${ARCH}" = "x86_64" ] ; then
  ln -s -f libntcan_x86_64.a libntcan.a
  echo "Using libntcan_x86_64.a"
else
  ln -s -f libntcan_i686.a libntcan.a
  echo "Using libntcan_i686.a"
fi


echo "Making libcolorseg (Felzenswalb-adaptation of Nils Plath)..."
cd $DIR_GIT/share/extern/libcolorseg/src/
make


echo "Building symbolic links in " $DIR_GIT "share/extern/ to libraries
directory " $DIR_EXTERNAL_LIBS "..."

cd $DIR_GIT
cd share/extern
./LINK $DIR_EXTERNAL_LIBS
cd ../..





# ----------------------------
# (2) Create make-config

echo "Creating make-config (specify individual profiles here)..."

cd share/
mv make-config make-config.BAK
echo "ifndef NAME
  MTLIB = 1
endif
" > make-config
cd ..

# TODO Profile: without hardware (no Schunk)






# ----------------------------
# (3) Install our libs

echo "Installing MLR-libs (libmt, librelational etc.)..."

make makeAll

# 
# # TODO make install libraries
# 
# # (3.1) libmt
# 
# cd share/src/MT/
# make
# cd ../../../
# echo "src/MT/ has been made successully."
# 
# 
# # (3.2) libnj
# 
# cd share/src/NJ/
# make
# cd ../../../
# echo "\nsrc/MT/ has been made successully.\n"
# 
# 
# # (3.3) libsd
# 
# cd share/src/SD/
# make
# cd ../../../
# echo "\nsrc/SD/ has been made successully.\n"
# 
# 
# # (3.3) libsd
# 
# cd share/src/DZ/
# make
# cd ../../../
# echo "\nsrc/DZ/ has been made successully.\n"
# 
# 
# # (3.4) librelational
# 
# cd share/src/relational/
# make
# cd ../../../
# echo "\nsrc/relational/ has been made successully.\n"



# ----------------------------
# (4) Tests

echo "To test the code, go to share/test/."

