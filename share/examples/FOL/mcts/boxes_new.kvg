## Syntactic keywords
Keyword Terminate
#Rule

## activities
grasping
graspingScrew
releasing
releasingScrew
fixing

## basic predicates
agent
object

busy     # involved in an ongoing (durative) activity
free     # agent hand is free
held     # object is held by an agent
grasped  # agent X holds/has grasped object Y
hasScrew # agent X holds a screw (screws are not objects/constrants, just a predicate of having a screw...)
fixed    # object X and Y are fixed together
never    # (for debugging)

## constants
Constant A1
Constant A2
Constant A3
Constant Handle
Constant Long1

## initial state
START_STATE {
(agent A1) (free A1)
(agent A2) (free A2)
(agent A3) (free A3)
(object Handle)
(object Long1)
}

### terminal state

terminal { (fixed Long1 Handle) }

### RULES

Rule activate_grasping {
  X, Y
  { (grasping X Y)! (agent X) (object Y) (free X) (held Y)! (busy X)! (busy Y)! }
  { (grasping X Y)=1.0 (busy X) (busy Y) }
}

Term (Terminate grasping) {
  X, Y
  { (grasping X Y)! (grasped X Y) (free X)! (held Y) (busy X)! (busy Y)! }
}

Rule activate_releasing {
  X, Y
  { (never) (releasing X Y)! (agent X) (object Y) (grasped X Y) (busy X)! (busy Y)! }
  { (releasing X Y)=1.0 (busy X) (busy Y) }
}

Term (Terminate releasing) {
  X, Y
  { (releasing X Y)! (grasped X Y)! (free X) (held Y)! (busy X)! (busy Y)! }
}

Rule activate_graspingScrew {
  X
  { (graspingScrew X)! (agent X) (free X) (busy X)! }
  { (graspingScrew X)=1.0 (busy X) }
}

Term (Terminate graspingScrew) {
  X
  { (graspingScrew X)! (free X)! (hasScrew X) (busy X)! }
}

Rule activate_releasingScrew {
  X
  { (never) (releasingScrew X)! (agent X) (hasScrew X) (busy X)! }
  { (releasingScrew X)=1.0 (busy X) }
}

Term (Terminate releasingScrew) {
  X
  { (releasingScrew X)! (hasScrew X)! (free X) (busy X)! }
}

Rule activate_fixing {
  X, Y, Z
  { (fixing X Y Z)! (object X) (object Y) (agent Z) (fixed X Y)! (held X) (held Y) (hasScrew Z) (busy X)! (busy Y)! (busy Z)! }
  { (fixing X Y Z)=1.0 (busy X) (busy Y) (busy Z) }
}

Term (Terminate fixing) {
  X, Y, Z
  { (fixing X Y Z)! (fixed X Y) (hasScrew Z)! (busy X)! (busy Y)! (busy Z)! }
}

